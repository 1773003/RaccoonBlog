@model PostViewModel
@{
    ViewBag.Title = @Model.Post.Title;
}

<article class="post">
    <header>
        <h1><a href="@Url.Action("Details", new { Model.Post.Id, Model.Post.Slug })">@Model.Post.Title</a></h1>
    </header>
    
    <nav id="headerPrevNext">
        <ul>
            @if (Model.PreviousPost != null)
            { 
                <li><a href="@Url.Action("Details", new { id = Model.PreviousPost.DomainId, Model.PreviousPost.Slug })">previous: @Model.PreviousPost.Title</a></li>
            }
        
            @if (Model.NextPost != null)
            { 
                <li><a href="@Url.Action("Details", new { id = Model.NextPost.DomainId, Model.NextPost.Slug })">next: @Model.NextPost.Title</a></li>
            }
        </ul>
    </nav>

    <div class="post_body raw_html">
        @Model.Post.Body
    </div>

    <footer>
        Published at <time pubdate>@Model.Post.PublishedAt.ToString("r")</time>

        @if (Model.Post.PublishedAt != Model.Post.CreatedAt)
        { 
            <span>
            | Originally posted at <time>@Model.Post.CreatedAt.ToString("r")</time>
            </span>
        }
    </footer>

	
    <div class="tags">
        <ul>
            @foreach (var name in Model.Post.Tags)
            {
                <li><a href="@Url.Action("Tag", new { name })">@name</a></li>
            }
        </ul>
    </div>
    

    <section class="comments">
        <header>
            <a name="feedback"></a>
            <h1>Feedback</h1>
        </header>
        @if (Model.Comments.Count == 0) { 
            <p>No comments posted yet.</p>
        }
        @foreach (var comment in Model.Comments)
        {
            <article class="comment@(comment.IsImportant ? " important" : null)">
                <img class="avatar" src="http://www.gravatar.com/avatar.php?gravatar_id=@(comment.EmailHash)&amp;size=50&amp;default=identicon" alt="Gravatar" style="border-width:0px;">

                <div class="comment_title">
                    @comment.CreatedAt by
                    <address>
                        <a title="@(string.IsNullOrEmpty(comment.Url) ? "Comment by " + comment.Author : comment.Url)" href="@comment.Url">@comment.Author</a>
                    </address>
                </div>
                <p>@comment.Body</p>
            </article>
        }

        <article id="postComment">
            @if (Model.Post.IsCommentAllowed = false || Model.IsCommentClosed) { 
                <div class="commentsClosedMessage">Comments have been closed on this topic.</div>
            } else {
                if (ViewData.ModelState.IsValid == false) { 
                    <div class="form-error">
                        @Html.ValidationSummary(true)
                    </div>
                }
                using (@Html.BeginForm("Comment", "Post", new { Model.Post.Id })) {
                    @Html.EditorFor(x => x.Input.Name)
                    @Html.EditorFor(x => x.Input.Email)
                    @Html.EditorFor(x => x.Input.Url)
                    @Html.EditorFor(x => x.Input.Body)
    
                    if (!Model.IsTrustedCommenter) { 
                        <div class="form_item">
                            <label>
                                <span class="form_item_name">Are you human?</span>
                                @Html.GenerateCaptcha()
                                @Html.ValidationMessage("CaptchaNotValid")
                            </label>
                        </div>
                    }
                    @Html.EditorFor(x => x.Input.CommenterKey)
                    <input type="submit" value="Post Comment" />
                }
            }
        </article>
    </section>
</article>
<div class="messageWrapper"><div id="message" style="visibility:hidden"></div></div>

@section Script {
    <script src="@Url.Content("~/Content/js/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/js/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    <script type="text/javascript">
        $(function () {
            $('#postComment form').submit(function () {
                var t = $(this);
                if (t.valid()) {
                    var jqxhr = $.post(t.attr('action'), t.serializeArray(), null, 'json');
                    jqxhr.error(failAction);
                    jqxhr.success(function (data, textStatus, jqXHR) {
                        if (!data.success) failAction();
                        else setMessage(data.message);
                    });
                    function failAction(data, textStatus, jqXHR) {
                        setMessage('An error occurred while posing your feedback: ' + data.message, 'fail');
                    }
                }
                return false;
            });

            function setMessage(message, cssClass) {
                var m = $('#message').html(message);
                if (cssClass) m.addClass(cssClass);
                m.css('visibility', 'visible');
            }
        });
    </script>
}