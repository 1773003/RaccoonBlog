@model PostViewModel
@{
    ViewBag.Title = @Model.Post.Title;
    ViewBag.CurrentPageUrl = Url.Action("Post", new { Model.Post.Id, Model.Post.Slug });
}

<article class="post">
    <header>
        <h1><a href="@ViewBag.CurrentPageUrl">@Model.Post.Title</a></h1>
    </header>
    
    <nav>
        <ul>
            @if (Model.PreviousPost != null)
            { 
                <li><a href="@Url.Action("Post", new { Model.PreviousPost.Id, Model.PreviousPost.Slug })">@Model.PreviousPost.Title</a></li>
            }
        
            @if (Model.NextPost != null)
            { 
                <li><a href="@Url.Action("Post", new { Model.NextPost.Id, Model.NextPost.Slug })">@Model.NextPost.Title</a></li>
            }
        </ul>
    </nav>

    <div class="post_body">
        @Model.Post.Body
    </div>

    <footer>
        <div id="postToolbar">
            <a href="http://www.dotnetkicks.com/kick/?url=http://ayende.com@(ViewBag.CurrentPageUrl)"><img src="http://www.dotnetkicks.com/Services/Images/KickItImageGenerator.ashx?url=@(ViewBag.CurrentPageUrl)" border="0"></a>
        </div>

        <a href="javascript:window.print();" class="printIcon"><span>Print</span></a>

        | Posted at <time pubdate>@Model.Post.CreatedAt.ToString("r")</time>

        @if (Model.Post.PublishedAt != Model.Post.CreatedAt)
        { 
            <span>
            | Originally published at <time>@Model.Post.PublishedAt.ToString("r")</time>
            </span>
        }
    </footer>

    <section class="comments">
        <header>
            <a name="feedback"></a>
            <h1>Feedback</h1>
        </header>
        @if (Model.Comments.Count == 0) { 
            <p>No comments posted yet.</p>
        }
        @foreach (var comment in Model.Comments)
        {
            <article class="comment">
                <img class="avatar" src="http://www.gravatar.com/avatar.php?gravatar_id=@(comment.EmailHash)&amp;size=50&amp;default=identicon" alt="Gravatar" style="border-width:0px;">

                <div class="comment_title">
                    @comment.CreatedAt by
                    <address>
                        <a title="@(string.IsNullOrEmpty(comment.Url) ? "Comment by " + comment.Author : comment.Url)" href="@comment.Url">@comment.Author</a>
                    </address>
                </div>
                <p>@comment.Body</p>
            </article>
        }
    </section>
</article>

<form action="@Url.Action("NewComment", new { Model.Post.Id })" method="post">
    @Html.EditorFor(x => x.NewComment.Name)
    @Html.EditorFor(x =>x.NewComment.Email)
    @Html.EditorFor(x => x.NewComment.Url)
    @Html.EditorFor(x => x.NewComment.Body)
    
    @if (!Model.IsTrustedUser) { 
        @Html.GenerateCaptcha()
    }
    <input type="submit" value="Post Comment" />
</form>