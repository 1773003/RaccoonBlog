using System.Web.Mvc;
<<<<<<< HEAD
using RaccoonBlog.Web.Models;
=======
using RaccoonBlog.Web.Infrastructure.Raven;
using RaccoonBlog.Web.Models;
using Raven.Client;
>>>>>>> origin/master

namespace RaccoonBlog.Web.Controllers
{
	public class WelcomeController : AbstractController
	{
		protected override void OnActionExecuted(ActionExecutedContext filterContext)
		{
			// don't load the non existant Blog/Config
		}

		//
		// GET: /Welcome/
		public ActionResult Index()
		{
			AssertConfigurationIsNeeded();

			return View(BlogConfig.New());
		}

		[HttpPost]
		public ActionResult CreateBlog(BlogConfig config)
		{
			AssertConfigurationIsNeeded();

			if (!ModelState.IsValid)
				return View("Index");

<<<<<<< HEAD
			using (var session = MvcApplication.DocumentStore.OpenSession())
			{
				// Create the blog by storing the config
				config.Id = "Blog/Config";
				session.Store(config);

				// Create default sections
				session.Store(new Section{Title="Archive", IsActive = true, Position = 1, ControllerName = "Section", ActionName = "ArchivesList"});
				session.Store(new Section{Title="Tags", IsActive=true, Position = 2, ControllerName = "Section", ActionName = "TagsList"});
				session.Store(new Section{Title="Statistics", IsActive = true, Position=3, ControllerName="Section", ActionName="PostsStatistics"});
=======
			// Create the blog by storing the config
			config.Id = "Blog/Config";
			Session.Store(config);
>>>>>>> origin/master

			// Create default sections
			Session.Store(new Section { Title = "Archive", IsActive = true, Position = 1, ControllerName = "Section", ActionName = "ArchivesList" });
			Session.Store(new Section { Title = "Tags", IsActive = true, Position = 2, ControllerName = "Section", ActionName = "TagsList" });
			Session.Store(new Section { Title = "Statistics", IsActive = true, Position = 3, ControllerName = "Section", ActionName = "PostsStatistics" });
			var user = new User
			{
				FullName = "Default User",
				Email = "user@example.org",
				Enabled = true,
			};
			user.SetPassword("raccoon");
			Session.Store(user);

			return RedirectToAction("Success");
		}

		public ActionResult Success()
		{
<<<<<<< HEAD
			BlogConfig config;
			using (var session = MvcApplication.DocumentStore.OpenSession())
			{
				config = session.Load<BlogConfig>("Blog/Config");
			}
=======
			var config = Session.Load<BlogConfig>("Blog/Config");
>>>>>>> origin/master

			return config == null ? View("Index") : View(config);
		}

		private void AssertConfigurationIsNeeded()
		{
<<<<<<< HEAD
			bool canContinue = true;
			using (var session = MvcApplication.DocumentStore.OpenSession())
			{
				if (session.Load<BlogConfig>("Blog/Config") != null)
					canContinue = false;
			}

			if (!canContinue)
=======
			if (Session.Load<BlogConfig>("Blog/Config") != null)
>>>>>>> origin/master
			{
				Response.Redirect("/");
				Response.End();
			}
		}
	}
}
